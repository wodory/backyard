---
description: 
globs: src/**/*.test.ts,src/**/*.test.tsx
alwaysApply: false
---
# Vitest 모킹 가이드라인

## 1. vi.mock 호이스팅 이해하기
- **핵심 원칙:** `vi.mock`은 파일 최상단으로 호이스팅됩니다. 이는 import문보다 먼저 실행된다는 의미입니다.
- **순서 주의:** 모든 `vi.mock` 호출은 다른 코드가 실행되기 전에 처리됩니다.
- **권장 패턴:** 파일 상단에 모든 `vi.mock` 호출을 명시적으로 그룹화하여 배치하세요.

## 2. 모킹 구현 패턴
- **모듈 가져오기:** 실제 구현이 필요한 경우 `vi.importActual`을 사용하세요.
  ```typescript
  vi.mock('@xyflow/react', async () => {
    const actual = await vi.importActual('@xyflow/react');
    return {
      ...actual,
      useReactFlow: () => ({ /* 모킹 구현 */ }),
    };
  });
  ```
- **객체 모킹:** 간단한 객체 모킹은 직접 리턴하세요.
  ```typescript
  vi.mock('sonner', () => ({
    toast: {
      success: vi.fn(),
      error: vi.fn(),
    }
  }));
  ```
- **함수 모킹:** 함수는 `vi.fn()`을 사용하고 필요시 `mockImplementation` 또는 `mockReturnValue`를 설정하세요.

## 3. 모킹 준비 및 정리
- **beforeEach:** 모든 테스트 전에 `vi.clearAllMocks()`를 호출하여 모든 호출 기록을 초기화하세요.
- **afterEach:** 테스트 후 `vi.resetAllMocks()`를 호출하여 모든 구현과 반환값을 재설정하세요.
- **복잡한 모킹:** 테스트별 모킹 구현이 필요한 경우, beforeEach 내에서 `mockImplementation`을 재설정하세요.

## 4. MSW 서버 설정
- **서버 설정:** MSW를 사용한 API 모킹 시 다음 순서를 따르세요:
  ```typescript
  beforeAll(() => server.listen());
  afterEach(() => server.resetHandlers());
  afterAll(() => server.close());
  ```
- **핸들러 추가:** 특정 테스트에서 응답을 오버라이드해야 하는 경우, `beforeEach` 내에서 `server.use()`를 호출하세요.

## 5. 훅 모킹
- **훅 모킹:** React 훅은 반환 객체의 모든 메서드를 명시적으로 모킹하세요.
  ```typescript
  vi.mock('./useMyHook', () => ({
    useMyHook: () => ({
      someFunction: vi.fn(),
      anotherFunction: vi.fn(),
    })
  }));
  ```
- **Zustand 스토어 모킹:** 스토어 모킹 시 selector 패턴을 고려하세요.
  ```typescript
  vi.mock('@/store/useAppStore', () => ({
    useAppStore: (selector) => selector ? 
      selector({ /* 상태 객체 */ }) : 
      { /* 전체 상태 객체 */ },
  }));
  ```

## 6. 자주 하는 실수와 해결책
- **의존성 모킹 누락:** 테스트 대상 코드가 사용하는 모든 외부 의존성을 모킹하세요.
- **구현 누락:** 테스트에서 호출되는 모든 모킹된 함수에 구체적인 구현을 제공하세요.
- **타입 문제:** 모킹된 값에 명시적인 타입 캐스팅을 적용하세요. (예: `as MarkerType`)
- **로컬 스토리지 모킹:** 로컬 스토리지 작업은 `vi.spyOn(window.localStorage, 'setItem')`과 같이 스파이를 사용하세요.
# --- END OF FILE