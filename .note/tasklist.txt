[ ] 카드 보드의 카드 구조
- 카드 보드의 카드는 해더와 콘텐츠 영억으로 나뉜다
- 카드는 접고 펼수 있다. 기본값은 접은 상태이다.
- 카드를 접으면 카드는 헤더 영역만 표시한다
  - 카드 헤더에는 카드 제목을 중앙 정렬로 표시하고, 맨 오른쪽에는 [펴기] 단추를 [>] 모양으로 표시한다.
  - [>] 단추를 클릭하면 카드는 펴진다. 
- 카드가 펴지면 컨텐츠 영역도 보여준다
  - 카드 헤더의 [>] 단추는 [^] 단추 = 접기 단추로 바뀐다.
  - 컨텐츠 영역에는 tiptap 뷰어를 표시하고 카드 내용을 표시한다. 
  - 글꼴 크기는 카드 목록보다 60% 수준으로 표시한다. 
  - 카드가 펴질 때 컨텐츠 영역의 최대 높이는 280px로 정한다.  
  - 컨텐츠 영역보다 표시해야 할 카드 내용이 많으면 ... 처리한다. 
- 왼쪽/오른쪽의 연결선 핸들러는 카드가 접히고 펴질 때 마다 위치를 카드 중앙으로 이동한다. 

[ ] 카드 상태
- 카드에 표시하는 다양한 UI와 동작을 카드의 상태별로 다르게 할 가능성이 있음
- 카드 상태를 기본, 마우스 호버, 선택으로 분리.

[ ] 카드 상태 - 기본
- 연결선 핸들러 표시하지 않음

[ ] 카드 상태 - 마우스 호버
- 연결선 핸들러 표시 
- 연결선 핸들러 색상은 연결선과 동일

[ ] 카드 상태 - 선택  
- 선택 상태는 클릭 혹은 선택 range 내부에 들어왔을 때
- 선택 상태의 UI 변경
  -- 외곽선 : 일반 카드 외곽선 + 2px, 색은 연결선 색과 동일
  -- 카드 배경색 : 초기값은 연결선 색의 밝기 60% 증가 
  -- 변경하는 UI의 값은 모두 환경 변수로 설정. 이후 UI로 바꿀 수 있어야 함. 
- 외곽선을 표시해도 연결선 핸들러가 선 가운데에 올 수 있도록 border 옵션 조절
- 연결선 핸들러 표시
- 연결선 핸들러 색상은 연결선과 동일



[ ] 카드 클릭 
-- 카드 위를 클릭하면 카드 선택 상태가 된다




** 토요일 - 원격 환경 적용 및 인증 ** 

**Supabase pw**
$JpH_w$9WKrriPR

**google OAuth ID/Password**
{"web":{"client_id":"545502090118-t5kccm1dguqbvbo8eovcoms71n4vem1e.apps.googleusercontent.com","project_id":"backyard-453110","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"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","redirect_uris":["https://backyard-orpin.vercel.app/"],"javascript_origins":["http://localhost:3000"]}}


## 1. Vercel에 퍼블리시하기

### 퍼블리시 준비 단계 테스트
- [ ] 로컬 환경에서 애플리케이션이 오류 없이 빌드되는지 확인
  - `npm run build` 또는 `yarn build` 명령으로 빌드 오류 확인
- [ ] 환경 변수가 `.env.local`이나 `.env` 파일에 올바르게 설정되어 있는지 확인
- [ ] 프로젝트의 `package.json`에 필요한 스크립트와 의존성이 모두 포함되어 있는지 확인

### Vercel 배포 테스트
- [ ] Vercel 계정 생성 및 로그인이 정상적으로 되는지 확인
- [ ] GitHub/GitLab 저장소와 Vercel 프로젝트가 올바르게 연결되는지 확인
- [ ] Vercel CLI를 통한 배포가 정상적으로 진행되는지 확인 (`vercel` 명령어)
- [ ] Vercel 환경 변수 설정이 올바르게 되었는지 확인

### 배포 후 테스트
- [ ] 배포된 URL에서 웹사이트가 정상적으로 로딩되는지 확인
- [ ] 모든 페이지와 라우트가 정상적으로 동작하는지 확인
- [ ] 이미지, 폰트 등의 정적 자원이 올바르게 로드되는지 확인
- [ ] 반응형 디자인이 다양한 디바이스에서 올바르게 표시되는지 확인

## 2. DB를 Supabase SaaS로 교체하기

### Supabase 설정 테스트
- [ ] Supabase 계정 생성 및 새 프로젝트 생성이 정상적으로 되는지 확인
- [ ] Supabase 프로젝트의 데이터베이스 연결 정보를 올바르게 가져왔는지 확인
- [ ] Supabase JavaScript 클라이언트 라이브러리가 정상적으로 설치되는지 확인
  - `npm install @supabase/supabase-js` 또는 `yarn add @supabase/supabase-js`

### 데이터 마이그레이션 테스트
- [ ] 기존 데이터베이스 스키마를 Supabase에 맞게 설계했는지 확인
- [ ] 데이터 마이그레이션 스크립트가 정상적으로 작동하는지 확인
- [ ] 마이그레이션 후 데이터 무결성이 유지되는지 확인

### Supabase 연동 테스트
- [ ] Supabase 클라이언트 초기화가 올바르게 되는지 확인
```javascript
const supabaseClient = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
);
```
- [ ] 데이터 조회(SELECT) 쿼리가 정상적으로 작동하는지 확인
- [ ] 데이터 생성(INSERT) 쿼리가 정상적으로 작동하는지 확인
- [ ] 데이터 수정(UPDATE) 쿼리가 정상적으로 작동하는지 확인
- [ ] 데이터 삭제(DELETE) 쿼리가 정상적으로 작동하는지 확인
- [ ] Supabase RLS(Row Level Security)가 올바르게 설정되었는지 확인

### 오류 처리 테스트
- [ ] 데이터베이스 연결 실패 시 적절한 오류 메시지가 표시되는지 확인
- [ ] 쿼리 실패 시 사용자에게 친절한 오류 메시지가 제공되는지 확인
- [ ] 네트워크 오류 시 재시도 메커니즘이 작동하는지 확인

## 3. Google 원격 인증 붙이기

### Google OAuth 설정 테스트
- [ ] Google Cloud Console에서 OAuth 클라이언트 ID와 비밀키를 올바르게 생성했는지 확인
- [ ] 리디렉션 URI가 올바르게 설정되었는지 확인 (로컬 개발 및 Vercel 배포 URL 모두)
- [ ] 필요한 OAuth 스코프(이메일, 프로필 등)가 올바르게 지정되었는지 확인

### Supabase Auth 연동 테스트
- [ ] Supabase 프로젝트에서 Google OAuth 제공자가 올바르게 구성되었는지 확인
- [ ] Supabase Auth API를 사용한 Google 로그인 코드가 정상적으로 작동하는지 확인
```javascript
const { user, session, error } = await supabase.auth.signIn({
  provider: 'google',
});
```

### 인증 흐름 테스트
- [ ] 로그인 버튼 클릭 시 Google 로그인 페이지로 정상적으로 리디렉션되는지 확인
- [ ] Google 계정으로 성공적으로 로그인 후 애플리케이션으로 리디렉션되는지 확인
- [ ] 사용자 정보(이메일, 이름 등)가 올바르게 가져와지는지 확인
- [ ] 로그인 상태가 애플리케이션 전체에서 올바르게 유지되는지 확인
- [ ] 로그아웃 기능이 정상적으로 작동하는지 확인

### 인증 상태 관리 테스트
- [ ] 새로고침 후에도 로그인 상태가 유지되는지 확인
- [ ] 세션 토큰이 올바르게 저장되고 관리되는지 확인
- [ ] 인증이 필요한 페이지에 비로그인 사용자 접근 시 적절히 처리되는지 확인
- [ ] 인증된 사용자만 특정 API를 호출할 수 있는지 확인

### 사용자 경험 테스트
- [ ] 로그인 및 로그아웃 과정이 사용자에게 직관적인지 확인
- [ ] 로딩 상태가 적절히 표시되는지 확인
- [ ] 인증 오류 시 사용자 친화적인 메시지가 표시되는지 확인

### 최종 통합 테스트
- [ ] 로그인한 사용자의 데이터가 Supabase DB와 올바르게 연동되는지 확인
- [ ] 권한에 따른 데이터 접근 제한이 올바르게 작동하는지 확인
- [ ] Vercel 배포 환경에서도 모든 인증 기능이 정상적으로 작동하는지 확인